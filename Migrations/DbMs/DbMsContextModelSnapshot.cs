// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03DomainModels.Context;

namespace P03DomainModels.Migrations.DbMs
{
    [DbContext(typeof(DbMsContext))]
    partial class DbMsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P03DomainModels.Competion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Competions");
                });

            modelBuilder.Entity("P03DomainModels.Competitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("P03DomainModels.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompetionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetionId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("P03DomainModels.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompetionId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompetionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("P03DomainModels.Competitor", b =>
                {
                    b.HasOne("P03DomainModels.Game", "Game")
                        .WithMany("Competitors")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03DomainModels.Player", "Player")
                        .WithMany("CompetedGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("P03DomainModels.Game", b =>
                {
                    b.HasOne("P03DomainModels.Competion", null)
                        .WithMany("Games")
                        .HasForeignKey("CompetionId");
                });

            modelBuilder.Entity("P03DomainModels.Player", b =>
                {
                    b.HasOne("P03DomainModels.Competion", null)
                        .WithMany("Players")
                        .HasForeignKey("CompetionId");
                });

            modelBuilder.Entity("P03DomainModels.Competion", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("P03DomainModels.Game", b =>
                {
                    b.Navigation("Competitors");
                });

            modelBuilder.Entity("P03DomainModels.Player", b =>
                {
                    b.Navigation("CompetedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
